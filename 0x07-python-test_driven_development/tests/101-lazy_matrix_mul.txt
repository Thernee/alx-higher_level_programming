
	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Testing empty arguments:
	>>> print(lazy_matrix_mul())
    	Traceback (most recent call last):
	...
    	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> a = 30
	>>> lazy_matrix_mul(a)
    	Traceback (most recent call last):
	...
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

Testing incorrect lists:
	>>> print(lazy_matrix_mul([1, 2], [[3, 4]]))
    	Traceback (most recent call last):
	...
	ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)

	>>> print(lazy_matrix_mul([[1, 2]], [3, 4]))
	[11]

	>>> print(lazy_matrix_mul([[1, "string"]], [[3, 4]]))
    	Traceback (most recent call last):
	...
	ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

	>> print(lazy_matrix_mul([[1, 2]], [[{"a": 1}, 8.8]]))
    	Traceback (most recent call last):
	...
    	TypeError: m_b should contain only integers or floats


Testing correct input:
	>>> a = [[3, 2, 1, 5], [9, 1, 3, 0]]
	>>> b = [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]]

	>>> lazy_matrix_mul(a, b)
	array([[50, 42, 42],
               [25, 96, 26]])

	>>> a = 2
	>>> b = [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> b = "string"
	>>> a = [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
  	...
	ValueError: Scalar operands are not allowed, use '*' instead

	>>> b = [[1, 2], 1]
	>>> a = [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence.

	>>> a = []
	>>> b = [[1, 2],[2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
  	...
	ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

	>>> b = []
	>>> a = [[1, 2],[2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
  	...
	ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

	>>> b = []
	>>> a = [[1, 2],[2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
  	...
	ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

	>>> b = [[]]
	>>> a = [[1, 2],[2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> a = [[1, 2.456],[2, 3.27386]]
	>>> b = [[1, 2.456],[2, "3"]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	TypeError: invalid data type for einsum

	>>> a = [[1, 2.456],[2, 3], [1]]
	>>> b = [[1, 2],[2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence.

	>>> b = [[1, 2.456],[2, 3], [1]]
	>>> a = [[1, 2],[2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	ValueError: setting an array element with a sequence.

	>>> a = [[1, 2],[2, 3]]
	>>> b = [[1, 2, 3],[1, 2, 3],[1, 2, 3]]

	>>> lazy_matrix_mul(a, b)
	Traceback (most recent call last):
	...
	ValueError: shapes (2,2) and (3,3) not aligned: 2 (dim 1) != 3 (dim 0)

